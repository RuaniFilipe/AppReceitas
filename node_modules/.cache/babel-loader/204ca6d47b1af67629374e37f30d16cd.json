{"ast":null,"code":"var _jsxFileName = \"/home/ruani/projetos/sd-08-project-recipes-app/src/components/RecipeCardsDone.js\";\nimport React, { useContext } from 'react';\nimport Copy from 'clipboard-copy';\nimport MyContext from '../context/MyContext';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport '../styles/RecipeCardsDone.css';\n\nfunction RecipeCardsDone() {\n  const {\n    copied,\n    setCopied,\n    cardType,\n    setCardType,\n    cardId,\n    setCardId,\n    done,\n    setDone\n  } = useContext(MyContext);\n  const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  const LIMIT = 2;\n  console.log(done);\n  return doneRecipes.map((card, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: card.id,\n    className: \"cardsDone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cardsDoneImg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: card.image,\n    alt: card.name,\n    \"data-testid\": `${index}-horizontal-image`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"testes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    type: \"button\",\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    onClick: () => {\n      Copy(`http://localhost:3000/${card.type}s/${card.id}`);\n      setCopied(true);\n      setCardType(card.type);\n      setCardId(card.id);\n    },\n    src: shareIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, copied && cardType === card.type && cardId === card.id && 'Link copiado!', /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, card.type === 'comida' ? `${card.area} - ${card.category}` : card.alcoholicOrNot), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, card.name), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-done-date`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, `Feita em: ${card.doneDate}`), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, card.tags.map((tag, indexTag) => {\n    if (indexTag < LIMIT) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        \"data-testid\": `${index}-${tag}-horizontal-tag`,\n        className: \"tags\",\n        key: indexTag,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }, tag);\n    }\n\n    return null;\n  })))));\n}\n\nexport default RecipeCardsDone;","map":{"version":3,"sources":["/home/ruani/projetos/sd-08-project-recipes-app/src/components/RecipeCardsDone.js"],"names":["React","useContext","Copy","MyContext","RecipeCardsDone","copied","setCopied","cardType","setCardType","cardId","setCardId","done","setDone","doneRecipes","JSON","parse","localStorage","getItem","LIMIT","console","log","map","card","index","id","image","name","type","shareIcon","area","category","alcoholicOrNot","doneDate","tags","tag","indexTag"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport Copy from 'clipboard-copy';\nimport MyContext from '../context/MyContext';\nimport shareIcon from '../images/shareIcon.svg';\nimport '../styles/RecipeCardsDone.css';\n\nfunction RecipeCardsDone() {\n  const {\n    copied,\n    setCopied,\n    cardType,\n    setCardType,\n    cardId,\n    setCardId,\n    done,\n    setDone,\n  } = useContext(MyContext);\n  const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  const LIMIT = 2;\n\n  console.log(done);\n\n  return (\n    doneRecipes.map((card, index) => (\n      <div key={ card.id } className=\"cardsDone\">\n        <div className=\"cardsDoneImg\">\n          <img\n            src={ card.image }\n            alt={ card.name }\n            data-testid={ `${index}-horizontal-image` }\n          />\n        </div>\n        <div className=\"testes\">\n          <button\n            className=\"btn\"\n            type=\"button\"\n            data-testid={ `${index}-horizontal-share-btn` }\n            onClick={ () => {\n              Copy(`http://localhost:3000/${card.type}s/${card.id}`);\n              setCopied(true);\n              setCardType(card.type);\n              setCardId(card.id);\n            } }\n            src={ shareIcon }\n          >\n            {copied && cardType === card.type && cardId === card.id && 'Link copiado!'}\n            <span />\n          </button>\n          <p\n            data-testid={ `${index}-horizontal-top-text` }\n          >\n            {(card.type === 'comida'\n              ? `${card.area} - ${card.category}`\n              : card.alcoholicOrNot)}\n          </p>\n          <p\n            data-testid={ `${index}-horizontal-name` }\n          >\n            {card.name}\n          </p>\n          <p\n            data-testid={ `${index}-horizontal-done-date` }\n          >\n            {`Feita em: ${card.doneDate}`}\n          </p>\n          <div>\n            {card.tags.map((tag, indexTag) => {\n              if (indexTag < LIMIT) {\n                return (\n                  <span\n                    data-testid={ `${index}-${tag}-horizontal-tag` }\n                    className=\"tags\"\n                    key={ indexTag }\n                  >\n                    {tag}\n                  </span>\n                );\n              }\n              return null;\n            })}\n          </div>\n        </div>\n      </div>\n    ))\n  );\n}\n\nexport default RecipeCardsDone;\n"]},"metadata":{},"sourceType":"module"}