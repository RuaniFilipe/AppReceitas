{"ast":null,"code":"var _jsxFileName = \"/home/ruani/projetos/sd-08-project-recipes-app/src/components/RecomendedCards.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport MyContext from '../context/MyContext';\nimport '../styles/RecomendedCards.css';\n\nfunction RecomendedCards({\n  title\n}) {\n  const LIMIT_RECOMENDED_CARDS = 5;\n  const {\n    bebidas,\n    comidas\n  } = useContext(MyContext);\n  let type;\n  let arrayToRender = [];\n\n  if (title === 'comidas') {\n    type = 'Meal';\n    arrayToRender = comidas;\n  } else {\n    type = 'Drink';\n    arrayToRender = bebidas;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recomended-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, arrayToRender.map((item, index) => {\n    if (index <= LIMIT_RECOMENDED_CARDS) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cartao\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        \"data-testid\": `${index}-recomendation-card`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        \"data-testid\": `${index}-recomendation-title`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, item[`str${type}`]), /*#__PURE__*/React.createElement(\"img\", {\n        alt: item[`str${type}`],\n        \"data-testid\": `${index}-card-img`,\n        src: item[`str${type}Thumb`],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      })));\n    }\n\n    return null;\n  }));\n}\n\nRecomendedCards.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default RecomendedCards;","map":{"version":3,"sources":["/home/ruani/projetos/sd-08-project-recipes-app/src/components/RecomendedCards.js"],"names":["React","useContext","PropTypes","MyContext","RecomendedCards","title","LIMIT_RECOMENDED_CARDS","bebidas","comidas","type","arrayToRender","map","item","index","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAO,+BAAP;;AAEA,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAoC;AAClC,QAAMC,sBAAsB,GAAG,CAA/B;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBP,UAAU,CAACE,SAAD,CAAvC;AACA,MAAIM,IAAJ;AACA,MAAIC,aAAa,GAAG,EAApB;;AAEA,MAAIL,KAAK,KAAK,SAAd,EAAyB;AACvBI,IAAAA,IAAI,GAAG,MAAP;AACAC,IAAAA,aAAa,GAAGF,OAAhB;AACD,GAHD,MAGO;AACLC,IAAAA,IAAI,GAAG,OAAP;AACAC,IAAAA,aAAa,GAAGH,OAAhB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,aAAa,CAACC,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClC,QAAIA,KAAK,IAAIP,sBAAb,EAAqC;AACnC,0BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,GAAG,EAAGO,KADR;AAEE,uBAAe,GAAEA,KAAM,qBAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE;AAAI,uBAAe,GAAEA,KAAM,sBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACID,IAAI,CAAE,MAAKH,IAAK,EAAZ,CADR,CAJF,eAOE;AACE,QAAA,GAAG,EAAGG,IAAI,CAAE,MAAKH,IAAK,EAAZ,CADZ;AAEE,uBAAe,GAAEI,KAAM,WAFzB;AAGE,QAAA,GAAG,EAAGD,IAAI,CAAE,MAAKH,IAAK,OAAZ,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF,CADF;AAiBD;;AACD,WAAO,IAAP;AACD,GArBA,CADH,CADF;AA0BD;;AAEDL,eAAe,CAACU,SAAhB,GAA4B;AAC1BT,EAAAA,KAAK,EAAEH,SAAS,CAACa,MAAV,CAAiBC;AADE,CAA5B;AAIA,eAAeZ,eAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport MyContext from '../context/MyContext';\nimport '../styles/RecomendedCards.css';\n\nfunction RecomendedCards({ title }) {\n  const LIMIT_RECOMENDED_CARDS = 5;\n  const { bebidas, comidas } = useContext(MyContext);\n  let type;\n  let arrayToRender = [];\n\n  if (title === 'comidas') {\n    type = 'Meal';\n    arrayToRender = comidas;\n  } else {\n    type = 'Drink';\n    arrayToRender = bebidas;\n  }\n\n  return (\n    <div className=\"recomended-cards\">\n      {arrayToRender.map((item, index) => {\n        if (index <= LIMIT_RECOMENDED_CARDS) {\n          return (\n            <div className=\"cartao\">\n              <div\n                key={ index }\n                data-testid={ `${index}-recomendation-card` }\n              >\n                <h3 data-testid={ `${index}-recomendation-title` }>\n                  { item[`str${type}`] }\n                </h3>\n                <img\n                  alt={ item[`str${type}`] }\n                  data-testid={ `${index}-card-img` }\n                  src={ item[`str${type}Thumb`] }\n                />\n              </div>\n            </div>\n          );\n        }\n        return null;\n      })}\n    </div>\n  );\n}\n\nRecomendedCards.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default RecomendedCards;\n"]},"metadata":{},"sourceType":"module"}