{"ast":null,"code":"var _jsxFileName = \"/home/ruani/projetos/sd-08-project-recipes-app/src/components/Categorys.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport MyContext from '../context/MyContext';\nimport firstRequest from '../services/firstRequest';\nimport filterCategoryRequest from '../services/filterCategoryRequest';\nimport '../styles/Categorys.css';\n\nfunction Categorys({\n  title\n}) {\n  const {\n    categoryComidas,\n    categoryBebidas,\n    setComidas,\n    setBebidas,\n    setToggleCategoryFilter,\n    toggleCategoryFilter\n  } = useContext(MyContext);\n  const LIMIT = 4;\n  let arrayCategory = [];\n\n  if (title === 'Comidas') {\n    arrayCategory = categoryComidas;\n  } else {\n    arrayCategory = categoryBebidas;\n  }\n\n  async function firstContent() {\n    const {\n      comidasApi,\n      bebidasApi\n    } = await firstRequest();\n    setComidas(comidasApi.meals);\n    setBebidas(bebidasApi.drinks);\n    setToggleCategoryFilter(false);\n  }\n\n  async function categoryFilter({\n    target\n  }) {\n    if (target.classList.contains('ativo')) {\n      target.classList.remove('ativo');\n      firstContent();\n      return null;\n    }\n\n    target.classList.add('ativo');\n    const {\n      foodRequest,\n      drinkRequest\n    } = await filterCategoryRequest(target.name);\n\n    if (drinkRequest) {\n      setBebidas(drinkRequest);\n    } else {\n      setComidas(foodRequest);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"category-btn-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"All-category-filter\",\n    onClick: firstContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"All\"), arrayCategory.map((item, index) => {\n    if (index <= LIMIT) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        key: index,\n        type: \"button\",\n        \"data-testid\": `${item.strCategory}-category-filter`,\n        onClick: toggleCategoryFilter ? firstContent : categoryFilter,\n        name: item.strCategory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, item.strCategory);\n    }\n\n    return null;\n  }));\n}\n\nCategorys.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default Categorys;","map":{"version":3,"sources":["/home/ruani/projetos/sd-08-project-recipes-app/src/components/Categorys.js"],"names":["React","useContext","PropTypes","MyContext","firstRequest","filterCategoryRequest","Categorys","title","categoryComidas","categoryBebidas","setComidas","setBebidas","setToggleCategoryFilter","toggleCategoryFilter","LIMIT","arrayCategory","firstContent","comidasApi","bebidasApi","meals","drinks","categoryFilter","target","classList","contains","remove","add","foodRequest","drinkRequest","name","map","item","index","strCategory","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,qBAAP,MAAkC,mCAAlC;AACA,OAAO,yBAAP;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA8B;AAC5B,QAAM;AACJC,IAAAA,eADI;AAEJC,IAAAA,eAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,UAJI;AAKJC,IAAAA,uBALI;AAMJC,IAAAA;AANI,MAOFZ,UAAU,CAACE,SAAD,CAPd;AAQA,QAAMW,KAAK,GAAG,CAAd;AACA,MAAIC,aAAa,GAAG,EAApB;;AAEA,MAAIR,KAAK,KAAK,SAAd,EAAyB;AACvBQ,IAAAA,aAAa,GAAGP,eAAhB;AACD,GAFD,MAEO;AACLO,IAAAA,aAAa,GAAGN,eAAhB;AACD;;AAED,iBAAeO,YAAf,GAA8B;AAC5B,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA6B,MAAMd,YAAY,EAArD;AACAM,IAAAA,UAAU,CAACO,UAAU,CAACE,KAAZ,CAAV;AACAR,IAAAA,UAAU,CAACO,UAAU,CAACE,MAAZ,CAAV;AAEAR,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACD;;AAED,iBAAeS,cAAf,CAA8B;AAAEC,IAAAA;AAAF,GAA9B,EAA0C;AACxC,QAAIA,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0B,OAA1B,CAAJ,EAAwC;AACtCF,MAAAA,MAAM,CAACC,SAAP,CAAiBE,MAAjB,CAAwB,OAAxB;AACAT,MAAAA,YAAY;AACZ,aAAO,IAAP;AACD;;AAEDM,IAAAA,MAAM,CAACC,SAAP,CAAiBG,GAAjB,CAAqB,OAArB;AAEA,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAgC,MAAMvB,qBAAqB,CAACiB,MAAM,CAACO,IAAR,CAAjE;;AACA,QAAID,YAAJ,EAAkB;AAChBjB,MAAAA,UAAU,CAACiB,YAAD,CAAV;AACD,KAFD,MAEO;AACLlB,MAAAA,UAAU,CAACiB,WAAD,CAAV;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,mBAAY,qBAFd;AAGE,IAAA,OAAO,EAAGX,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAQID,aAAa,CAACe,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACnC,QAAIA,KAAK,IAAIlB,KAAb,EAAoB;AAClB,0BACE;AACE,QAAA,GAAG,EAAGkB,KADR;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,uBAAe,GAAED,IAAI,CAACE,WAAY,kBAHpC;AAIE,QAAA,OAAO,EAAGpB,oBAAoB,GAAGG,YAAH,GAAkBK,cAJlD;AAKE,QAAA,IAAI,EAAGU,IAAI,CAACE,WALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGF,IAAI,CAACE,WAPR,CADF;AAWD;;AACD,WAAO,IAAP;AACD,GAfC,CARJ,CADF;AA2BD;;AAED3B,SAAS,CAAC4B,SAAV,GAAsB;AACpB3B,EAAAA,KAAK,EAAEL,SAAS,CAACiC,MAAV,CAAiBC;AADJ,CAAtB;AAIA,eAAe9B,SAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport MyContext from '../context/MyContext';\nimport firstRequest from '../services/firstRequest';\nimport filterCategoryRequest from '../services/filterCategoryRequest';\nimport '../styles/Categorys.css';\n\nfunction Categorys({ title }) {\n  const {\n    categoryComidas,\n    categoryBebidas,\n    setComidas,\n    setBebidas,\n    setToggleCategoryFilter,\n    toggleCategoryFilter,\n  } = useContext(MyContext);\n  const LIMIT = 4;\n  let arrayCategory = [];\n\n  if (title === 'Comidas') {\n    arrayCategory = categoryComidas;\n  } else {\n    arrayCategory = categoryBebidas;\n  }\n\n  async function firstContent() {\n    const { comidasApi, bebidasApi } = await firstRequest();\n    setComidas(comidasApi.meals);\n    setBebidas(bebidasApi.drinks);\n\n    setToggleCategoryFilter(false);\n  }\n\n  async function categoryFilter({ target }) {\n    if (target.classList.contains('ativo')) {\n      target.classList.remove('ativo');\n      firstContent();\n      return null;\n    }\n\n    target.classList.add('ativo');\n\n    const { foodRequest, drinkRequest } = await filterCategoryRequest(target.name);\n    if (drinkRequest) {\n      setBebidas(drinkRequest);\n    } else {\n      setComidas(foodRequest);\n    }\n  }\n\n  return (\n    <div className=\"category-btn-container\">\n      <button\n        type=\"button\"\n        data-testid=\"All-category-filter\"\n        onClick={ firstContent }\n      >\n        All\n      </button>\n      { arrayCategory.map((item, index) => {\n        if (index <= LIMIT) {\n          return (\n            <button\n              key={ index }\n              type=\"button\"\n              data-testid={ `${item.strCategory}-category-filter` }\n              onClick={ toggleCategoryFilter ? firstContent : categoryFilter }\n              name={ item.strCategory }\n            >\n              {item.strCategory}\n            </button>\n          );\n        }\n        return null;\n      }) }\n    </div>\n  );\n}\n\nCategorys.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Categorys;\n"]},"metadata":{},"sourceType":"module"}