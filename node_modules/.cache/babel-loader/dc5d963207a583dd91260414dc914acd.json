{"ast":null,"code":"function verifyInDon(type, recipe) {\n  let doneDate = new Date();\n  const dd = String(doneDate.getDate()).padStart(2, '0');\n  const mm = String(doneDate.getMonth() + 1).padStart(2, '0'); // January is 0!\n\n  const yyyy = doneDate.getFullYear();\n  doneDate = `${mm}/${dd}/${yyyy}`;\n  let startDoneRecipe;\n\n  if (type === 'Drink') {\n    startDoneRecipe = {\n      id: recipe[`id${type}`],\n      type: 'bebida',\n      area: '',\n      category: recipe.strCategory,\n      alcoholicOrNot: recipe.strAlcoholic,\n      name: recipe[`str${type}`],\n      image: recipe[`str${type}Thumb`],\n      doneDate,\n      tags: []\n    };\n  } else {\n    startDoneRecipe = {\n      id: recipe[`id${type}`],\n      type: 'comida',\n      area: recipe.strArea,\n      category: recipe.strCategory,\n      alcoholicOrNot: '',\n      name: recipe[`str${type}`],\n      image: recipe[`str${type}Thumb`],\n      doneDate,\n      tags: recipe.strTags.split(',')\n    };\n  }\n\n  const savedDoneRecipes = JSON.parse(localStorage.getItem('doneRecipes')) || [];\n  savedDoneRecipes.push(startDoneRecipe);\n  localStorage.setItem('doneRecipes', JSON.stringify(savedDoneRecipes));\n}\n\nexport default verifyInDon;","map":{"version":3,"sources":["/home/ruani/projetos/sd-08-project-recipes-app/src/services/verifyDone.js"],"names":["verifyInDon","type","recipe","doneDate","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","startDoneRecipe","id","area","category","strCategory","alcoholicOrNot","strAlcoholic","name","image","tags","strArea","strTags","split","savedDoneRecipes","JSON","parse","localStorage","getItem","push","setItem","stringify"],"mappings":"AAAA,SAASA,WAAT,CAAqBC,IAArB,EAA2BC,MAA3B,EAAmC;AACjC,MAAIC,QAAQ,GAAG,IAAIC,IAAJ,EAAf;AACA,QAAMC,EAAE,GAAGC,MAAM,CAACH,QAAQ,CAACI,OAAT,EAAD,CAAN,CAA2BC,QAA3B,CAAoC,CAApC,EAAuC,GAAvC,CAAX;AACA,QAAMC,EAAE,GAAGH,MAAM,CAACH,QAAQ,CAACO,QAAT,KAAsB,CAAvB,CAAN,CAAgCF,QAAhC,CAAyC,CAAzC,EAA4C,GAA5C,CAAX,CAHiC,CAG4B;;AAC7D,QAAMG,IAAI,GAAGR,QAAQ,CAACS,WAAT,EAAb;AACAT,EAAAA,QAAQ,GAAI,GAAEM,EAAG,IAAGJ,EAAG,IAAGM,IAAK,EAA/B;AACA,MAAIE,eAAJ;;AAEA,MAAIZ,IAAI,KAAK,OAAb,EAAsB;AACpBY,IAAAA,eAAe,GAAG;AAChBC,MAAAA,EAAE,EAAEZ,MAAM,CAAE,KAAID,IAAK,EAAX,CADM;AAEhBA,MAAAA,IAAI,EAAE,QAFU;AAGhBc,MAAAA,IAAI,EAAE,EAHU;AAIhBC,MAAAA,QAAQ,EAAEd,MAAM,CAACe,WAJD;AAKhBC,MAAAA,cAAc,EAAEhB,MAAM,CAACiB,YALP;AAMhBC,MAAAA,IAAI,EAAElB,MAAM,CAAE,MAAKD,IAAK,EAAZ,CANI;AAOhBoB,MAAAA,KAAK,EAAEnB,MAAM,CAAE,MAAKD,IAAK,OAAZ,CAPG;AAQhBE,MAAAA,QARgB;AAShBmB,MAAAA,IAAI,EAAE;AATU,KAAlB;AAWD,GAZD,MAYO;AACLT,IAAAA,eAAe,GAAG;AAChBC,MAAAA,EAAE,EAAEZ,MAAM,CAAE,KAAID,IAAK,EAAX,CADM;AAEhBA,MAAAA,IAAI,EAAE,QAFU;AAGhBc,MAAAA,IAAI,EAAEb,MAAM,CAACqB,OAHG;AAIhBP,MAAAA,QAAQ,EAAEd,MAAM,CAACe,WAJD;AAKhBC,MAAAA,cAAc,EAAE,EALA;AAMhBE,MAAAA,IAAI,EAAElB,MAAM,CAAE,MAAKD,IAAK,EAAZ,CANI;AAOhBoB,MAAAA,KAAK,EAAEnB,MAAM,CAAE,MAAKD,IAAK,OAAZ,CAPG;AAQhBE,MAAAA,QARgB;AAShBmB,MAAAA,IAAI,EAAEpB,MAAM,CAACsB,OAAP,CAAeC,KAAf,CAAqB,GAArB;AATU,KAAlB;AAWD;;AAED,QAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,KAAmD,EAA5E;AACAJ,EAAAA,gBAAgB,CAACK,IAAjB,CAAsBlB,eAAtB;AACAgB,EAAAA,YAAY,CAACG,OAAb,CAAqB,aAArB,EAAoCL,IAAI,CAACM,SAAL,CAAeP,gBAAf,CAApC;AACD;;AAED,eAAe1B,WAAf","sourcesContent":["function verifyInDon(type, recipe) {\n  let doneDate = new Date();\n  const dd = String(doneDate.getDate()).padStart(2, '0');\n  const mm = String(doneDate.getMonth() + 1).padStart(2, '0'); // January is 0!\n  const yyyy = doneDate.getFullYear();\n  doneDate = `${mm}/${dd}/${yyyy}`;\n  let startDoneRecipe;\n\n  if (type === 'Drink') {\n    startDoneRecipe = {\n      id: recipe[`id${type}`],\n      type: 'bebida',\n      area: '',\n      category: recipe.strCategory,\n      alcoholicOrNot: recipe.strAlcoholic,\n      name: recipe[`str${type}`],\n      image: recipe[`str${type}Thumb`],\n      doneDate,\n      tags: [],\n    };\n  } else {\n    startDoneRecipe = {\n      id: recipe[`id${type}`],\n      type: 'comida',\n      area: recipe.strArea,\n      category: recipe.strCategory,\n      alcoholicOrNot: '',\n      name: recipe[`str${type}`],\n      image: recipe[`str${type}Thumb`],\n      doneDate,\n      tags: recipe.strTags.split(','),\n    };\n  }\n\n  const savedDoneRecipes = JSON.parse(localStorage.getItem('doneRecipes')) || [];\n  savedDoneRecipes.push(startDoneRecipe);\n  localStorage.setItem('doneRecipes', JSON.stringify(savedDoneRecipes));\n}\n\nexport default verifyInDon;\n"]},"metadata":{},"sourceType":"module"}