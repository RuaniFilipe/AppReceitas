{"ast":null,"code":"var _jsxFileName = \"/home/ruani/projetos/sd-08-project-recipes-app/src/pages/Comida.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Copy from 'clipboard-copy';\nimport Ingredientes from '../components/Ingredientes';\nimport RecomendedCards from '../components/RecomendedCards';\nimport MyContext from '../context/MyContext';\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\nimport shareIcon from \"../images/shareIcon.svg\";\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\nimport requestById from '../services/requestById';\nimport verifyInFavorite from '../services/verifyInFavorite';\nimport verifyInProgress from '../services/verifyInProgress';\nimport verifyStorage from '../services/verifyStorage';\nimport verifyText from '../services/verifyText';\nimport '../styles/Comida.css';\n\nfunction Comida() {\n  const INICIO_CORTE = 9;\n  const history = useHistory();\n  const id = history.location.pathname.substr(INICIO_CORTE, history.location.pathname.length);\n  const {\n    recipe,\n    setRecipe,\n    renderButtonComparison,\n    setRenderButtonComparison,\n    copied,\n    setCopied,\n    favorite,\n    setFavorite\n  } = useContext(MyContext);\n  useEffect(() => {\n    setRenderButtonComparison(verifyStorage(id, 'doneRecipes'));\n  }, [id, renderButtonComparison, setRenderButtonComparison]); // renderButtonComparison\n\n  useEffect(() => {\n    setFavorite(verifyStorage(id, 'favoriteRecipes'));\n  }, [favorite, id, setFavorite]); // favorite\n\n  let urlVideo;\n\n  if (recipe.strYoutube) {\n    urlVideo = recipe.strYoutube.replace('watch?v=', 'embed/');\n  } // async function requestRecipe() {\n  //   const recipeFromApi = await requestById(id, 'comidas');\n  //   setRecipe(recipeFromApi.meals[0]);\n  // }\n\n\n  function iniciarReceita() {\n    verifyInProgress(id, 'meals');\n    history.push(`/comidas/${id}/in-progress`);\n  }\n\n  function renderButton() {\n    const textButton = verifyText(id, 'meals');\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"iniciar-receita-btn\",\n      type: \"button\",\n      \"data-testid\": \"start-recipe-btn\",\n      onClick: iniciarReceita,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, textButton);\n  }\n\n  function favoriteRecipe(status) {\n    verifyInFavorite(recipe, 'Meal', status);\n    setFavorite(status);\n  }\n\n  useEffect(() => {\n    async function requestRecipe() {\n      const recipeFromApi = await requestById(id, 'comidas');\n      setRecipe(recipeFromApi.meals[0]);\n    }\n\n    requestRecipe();\n  }, [id, setRecipe]); // []\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comidaContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nomeEbot\\xF5es\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    src: recipe.strMealThumb,\n    alt: recipe.strMeal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, recipe.strMeal), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttonContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"share-btn\",\n    onClick: () => {\n      Copy(`http://localhost:3000${history.location.pathname}`);\n      setCopied(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, copied && 'Link copiado!', /*#__PURE__*/React.createElement(\"img\", {\n    src: shareIcon,\n    alt: \"shareIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => favorite ? favoriteRecipe(false) : favoriteRecipe(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: favorite ? whiteHeartIcon : blackHeartIcon,\n    alt: \"favoriteIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"h4\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \"Category:\", recipe.strCategory), /*#__PURE__*/React.createElement(Ingredientes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"instructionsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"Instru\\xE7\\xF5es\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, recipe.strInstructions)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"V\\xEDdeo\"), /*#__PURE__*/React.createElement(\"iframe\", {\n    src: urlVideo,\n    title: recipe.strMeal,\n    \"data-testid\": \"video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recomendadas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"Recomendadas\"), /*#__PURE__*/React.createElement(RecomendedCards, {\n    title: \"bebidas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  })), renderButtonComparison && renderButton());\n}\n\nexport default Comida;","map":{"version":3,"sources":["/home/ruani/projetos/sd-08-project-recipes-app/src/pages/Comida.js"],"names":["React","useContext","useEffect","useHistory","Copy","Ingredientes","RecomendedCards","MyContext","requestById","verifyInFavorite","verifyInProgress","verifyStorage","verifyText","Comida","INICIO_CORTE","history","id","location","pathname","substr","length","recipe","setRecipe","renderButtonComparison","setRenderButtonComparison","copied","setCopied","favorite","setFavorite","urlVideo","strYoutube","replace","iniciarReceita","push","renderButton","textButton","favoriteRecipe","status","requestRecipe","recipeFromApi","meals","strMealThumb","strMeal","shareIcon","whiteHeartIcon","blackHeartIcon","strCategory","strInstructions"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Copy from 'clipboard-copy';\nimport Ingredientes from '../components/Ingredientes';\nimport RecomendedCards from '../components/RecomendedCards';\nimport MyContext from '../context/MyContext';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport requestById from '../services/requestById';\nimport verifyInFavorite from '../services/verifyInFavorite';\nimport verifyInProgress from '../services/verifyInProgress';\nimport verifyStorage from '../services/verifyStorage';\nimport verifyText from '../services/verifyText';\nimport '../styles/Comida.css';\n\nfunction Comida() {\n  const INICIO_CORTE = 9;\n  const history = useHistory();\n  const id = history.location.pathname\n    .substr(INICIO_CORTE, history.location.pathname.length);\n  const {\n    recipe,\n    setRecipe,\n    renderButtonComparison,\n    setRenderButtonComparison,\n    copied,\n    setCopied,\n    favorite,\n    setFavorite,\n  } = useContext(MyContext);\n\n  useEffect(() => {\n    setRenderButtonComparison(verifyStorage(id, 'doneRecipes'));\n  }, [id, renderButtonComparison, setRenderButtonComparison]); // renderButtonComparison\n\n  useEffect(() => {\n    setFavorite(verifyStorage(id, 'favoriteRecipes'));\n  }, [favorite, id, setFavorite]); // favorite\n\n  let urlVideo;\n  if (recipe.strYoutube) {\n    urlVideo = recipe.strYoutube.replace('watch?v=', 'embed/');\n  }\n\n  // async function requestRecipe() {\n  //   const recipeFromApi = await requestById(id, 'comidas');\n  //   setRecipe(recipeFromApi.meals[0]);\n  // }\n\n  function iniciarReceita() {\n    verifyInProgress(id, 'meals');\n    history.push(`/comidas/${id}/in-progress`);\n  }\n\n  function renderButton() {\n    const textButton = verifyText(id, 'meals');\n    return (\n      <button\n        className=\"iniciar-receita-btn\"\n        type=\"button\"\n        data-testid=\"start-recipe-btn\"\n        onClick={ iniciarReceita }\n      >\n        { textButton }\n      </button>\n    );\n  }\n\n  function favoriteRecipe(status) {\n    verifyInFavorite(recipe, 'Meal', status);\n    setFavorite(status);\n  }\n\n  useEffect(() => {\n    async function requestRecipe() {\n      const recipeFromApi = await requestById(id, 'comidas');\n      setRecipe(recipeFromApi.meals[0]);\n    }\n    requestRecipe();\n  }, [id, setRecipe]); // []\n\n  return (\n    <div className=\"comidaContainer\">\n      <div className=\"nomeEbotões\">\n        <img\n          data-testid=\"recipe-photo\"\n          src={ recipe.strMealThumb }\n          alt={ recipe.strMeal }\n        />\n        <h1 data-testid=\"recipe-title\">{recipe.strMeal}</h1>\n        <div className=\"buttonContainer\">\n          <button\n            type=\"button\"\n            data-testid=\"share-btn\"\n            onClick={ () => {\n              Copy(`http://localhost:3000${history.location.pathname}`);\n              setCopied(true);\n            } }\n          >\n            {copied && 'Link copiado!'}\n            <img src={ shareIcon } alt=\"shareIcon\" />\n          </button>\n          <button\n            type=\"button\"\n            onClick={ () => (favorite ? favoriteRecipe(false) : favoriteRecipe(true)) }\n          >\n            <img\n              data-testid=\"favorite-btn\"\n              src={ favorite ? whiteHeartIcon : blackHeartIcon }\n              alt=\"favoriteIcon\"\n            />\n          </button>\n        </div>\n      </div>\n      <h4 data-testid=\"recipe-category\">\n        Category:\n        {recipe.strCategory}\n      </h4>\n      <Ingredientes />\n      <div className=\"instructionsContainer\">\n        <h2>Instruções</h2>\n        <p data-testid=\"instructions\">{recipe.strInstructions}</p>\n      </div>\n      <div>\n        <h2>Vídeo</h2>\n        <iframe src={ urlVideo } title={ recipe.strMeal } data-testid=\"video\" />\n      </div>\n      <div className=\"recomendadas\">\n        <h2>Recomendadas</h2>\n        <RecomendedCards title=\"bebidas\" />\n      </div>\n      {renderButtonComparison && renderButton()}\n    </div>\n  );\n}\n\nexport default Comida;\n"]},"metadata":{},"sourceType":"module"}