{"ast":null,"code":"var _jsxFileName = \"/home/ruani/projetos/sd-08-project-recipes-app/src/context/Provider.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Context from './MyContext';\nimport categoryRequest from '../services/categoryRequest';\nimport firstRequest from '../services/firstRequest';\n\nfunction Provider({\n  children\n}) {\n  const [userEmail, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [toggleExplore, setToggleExplore] = useState(false);\n  const [toggleCategoryFilter, setToggleCategoryFilter] = useState(false);\n  const [searchFilter, setSearchFilter] = useState('');\n  const [inputSearch, setInputSearch] = useState('');\n  const [createCards, setCreateCards] = useState(false);\n  const [apiResponse, setApiResponse] = useState([]);\n  const [type, setType] = useState({\n    item: 'item',\n    palavra: 'palavra'\n  });\n  const [comidas, setComidas] = useState([]);\n  const [bebidas, setBebidas] = useState([]);\n  const [categoryComidas, setCategoryComidas] = useState([]);\n  const [categoryBebidas, setCategoryBebidas] = useState([]);\n  const [recipe, setRecipe] = useState({});\n  const [recomendados, setRecomendados] = useState([]);\n  const [renderRec, setRenderRec] = useState(false);\n  const [renderButtonComparison, setRenderButtonComparison] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [favorite, setFavorite] = useState(false);\n  const [checkedStatus, setCheckedStatus] = useState(false);\n  const [countCheck, setCountCheck] = useState(0);\n  const [verifyChecked, setVerifyChecked] = useState(true);\n  const [done, setDone] = useState(JSON.parse(localStorage.getItem('doneRecipes')) || []);\n  const [cardId, setCardId] = useState('');\n  const [recipeFavorite, setRecipeFavorite] = useState(JSON.parse(localStorage.getItem('favoriteRecipes')) || []);\n  const [resposta, setResposta] = useState([]);\n  const contextValue = {\n    userEmail,\n    setEmail,\n    password,\n    setPassword,\n    toggleExplore,\n    setToggleExplore,\n    searchFilter,\n    setSearchFilter,\n    inputSearch,\n    setInputSearch,\n    createCards,\n    setCreateCards,\n    apiResponse,\n    setApiResponse,\n    type,\n    setType,\n    comidas,\n    setComidas,\n    bebidas,\n    setBebidas,\n    categoryComidas,\n    setCategoryComidas,\n    categoryBebidas,\n    setCategoryBebidas,\n    toggleCategoryFilter,\n    setToggleCategoryFilter,\n    recipe,\n    setRecipe,\n    recomendados,\n    setRecomendados,\n    renderRec,\n    setRenderRec,\n    renderButtonComparison,\n    setRenderButtonComparison,\n    copied,\n    setCopied,\n    favorite,\n    setFavorite,\n    checkedStatus,\n    setCheckedStatus,\n    countCheck,\n    setCountCheck,\n    verifyChecked,\n    setVerifyChecked,\n    done,\n    setDone,\n    cardId,\n    setCardId,\n    recipeFavorite,\n    setRecipeFavorite,\n    resposta,\n    setResposta\n  }; // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  useEffect(async () => {\n    const {\n      comidasApi,\n      bebidasApi\n    } = await firstRequest();\n    setComidas(comidasApi.meals);\n    setBebidas(bebidasApi.drinks);\n    setCreateCards(true);\n    const {\n      categoryComidasApi,\n      categoryBebidasApi\n    } = await categoryRequest();\n    setCategoryComidas(categoryComidasApi.meals);\n    setCategoryBebidas(categoryBebidasApi.drinks);\n  }, []);\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nProvider.propTypes = {\n  children: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default Provider;","map":{"version":3,"sources":["/home/ruani/projetos/sd-08-project-recipes-app/src/context/Provider.js"],"names":["React","useEffect","useState","PropTypes","Context","categoryRequest","firstRequest","Provider","children","userEmail","setEmail","password","setPassword","toggleExplore","setToggleExplore","toggleCategoryFilter","setToggleCategoryFilter","searchFilter","setSearchFilter","inputSearch","setInputSearch","createCards","setCreateCards","apiResponse","setApiResponse","type","setType","item","palavra","comidas","setComidas","bebidas","setBebidas","categoryComidas","setCategoryComidas","categoryBebidas","setCategoryBebidas","recipe","setRecipe","recomendados","setRecomendados","renderRec","setRenderRec","renderButtonComparison","setRenderButtonComparison","copied","setCopied","favorite","setFavorite","checkedStatus","setCheckedStatus","countCheck","setCountCheck","verifyChecked","setVerifyChecked","done","setDone","JSON","parse","localStorage","getItem","cardId","setCardId","recipeFavorite","setRecipeFavorite","resposta","setResposta","contextValue","comidasApi","bebidasApi","meals","drinks","categoryComidasApi","categoryBebidasApi","propTypes","objectOf","any","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Context from './MyContext';\nimport categoryRequest from '../services/categoryRequest';\nimport firstRequest from '../services/firstRequest';\n\nfunction Provider({ children }) {\n  const [userEmail, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [toggleExplore, setToggleExplore] = useState(false);\n  const [toggleCategoryFilter, setToggleCategoryFilter] = useState(false);\n  const [searchFilter, setSearchFilter] = useState('');\n  const [inputSearch, setInputSearch] = useState('');\n  const [createCards, setCreateCards] = useState(false);\n  const [apiResponse, setApiResponse] = useState([]);\n  const [type, setType] = useState({ item: 'item', palavra: 'palavra' });\n  const [comidas, setComidas] = useState([]);\n  const [bebidas, setBebidas] = useState([]);\n  const [categoryComidas, setCategoryComidas] = useState([]);\n  const [categoryBebidas, setCategoryBebidas] = useState([]);\n  const [recipe, setRecipe] = useState({});\n  const [recomendados, setRecomendados] = useState([]);\n  const [renderRec, setRenderRec] = useState(false);\n  const [renderButtonComparison, setRenderButtonComparison] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [favorite, setFavorite] = useState(false);\n  const [checkedStatus, setCheckedStatus] = useState(false);\n  const [countCheck, setCountCheck] = useState(0);\n  const [verifyChecked, setVerifyChecked] = useState(true);\n  const [done, setDone] = useState(JSON.parse(localStorage.getItem('doneRecipes')) || []);\n  const [cardId, setCardId] = useState('');\n  const [recipeFavorite, setRecipeFavorite] = useState(JSON.parse(localStorage\n    .getItem('favoriteRecipes')) || []);\n  const [resposta, setResposta] = useState([]);\n\n  const contextValue = {\n    userEmail,\n    setEmail,\n    password,\n    setPassword,\n    toggleExplore,\n    setToggleExplore,\n    searchFilter,\n    setSearchFilter,\n    inputSearch,\n    setInputSearch,\n    createCards,\n    setCreateCards,\n    apiResponse,\n    setApiResponse,\n    type,\n    setType,\n    comidas,\n    setComidas,\n    bebidas,\n    setBebidas,\n    categoryComidas,\n    setCategoryComidas,\n    categoryBebidas,\n    setCategoryBebidas,\n    toggleCategoryFilter,\n    setToggleCategoryFilter,\n    recipe,\n    setRecipe,\n    recomendados,\n    setRecomendados,\n    renderRec,\n    setRenderRec,\n    renderButtonComparison,\n    setRenderButtonComparison,\n    copied,\n    setCopied,\n    favorite,\n    setFavorite,\n    checkedStatus,\n    setCheckedStatus,\n    countCheck,\n    setCountCheck,\n    verifyChecked,\n    setVerifyChecked,\n    done,\n    setDone,\n    cardId,\n    setCardId,\n    recipeFavorite,\n    setRecipeFavorite,\n    resposta,\n    setResposta,\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(async () => {\n    const { comidasApi, bebidasApi } = await firstRequest();\n    setComidas(comidasApi.meals);\n    setBebidas(bebidasApi.drinks);\n    setCreateCards(true);\n    const { categoryComidasApi, categoryBebidasApi } = await categoryRequest();\n    setCategoryComidas(categoryComidasApi.meals);\n    setCategoryBebidas(categoryBebidasApi.drinks);\n  }, []);\n\n  return (\n    <Context.Provider value={ contextValue }>\n      { children }\n    </Context.Provider>);\n}\n\nProvider.propTypes = {\n  children: PropTypes.objectOf(\n    PropTypes.any,\n  ).isRequired,\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}